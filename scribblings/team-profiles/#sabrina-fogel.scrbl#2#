#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 22 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 1 6 #"wxloc\0"
          0 0 51 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 190 0 28 3 21 #"#lang scribble/manual"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"@("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"./common."
0 0 29 3 3 #"rkt"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 10 #"ts-tactics"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"@("
0 0 14 3 3 #"bio"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Sabrina "
0 0 29 3 5 #"Fogel"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 19 3 1 #"\""
0 0 29 3 7 #"sabrina"
0 0 19 3 1 #"."
0 0 29 3 3 #"jpg"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 19 3 58
#"\"Hey! My name is Sabrina and I go to The Bishop's School.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 4 #"blog"
0 0 24 3 1 #"{"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 9 #"blog-post"
0 0 24 3 1 #"["
0 0 19 3 14 #"\"Week 1 Day 1\""
0 0 24 3 2 #"]{"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 20 3 68
#"Learned more about Racket, as well as powertools like map and apply."
0 0 24 29 1 #"\n"
0 0 24 3 2 #" }"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 9 #"blog-post"
0 0 24 3 1 #"["
0 0 19 3 14 #"\"Week 1 Day 2\""
0 0 24 3 2 #"]{"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 20 3 67
#"Worked on setting up my blog. Here's some cool code from yesterday!"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 20 3 40 #"This is the format for the map function:"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  @"
0 0 14 3 9 #"codeblock"
0 0 24 3 1 #"{"
0 0 20 3 17 #"(map _____ _____)"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 20 3 106
(
 #"The map function applies the function (in the first space) to each i"
 #"tem in the list (in the second space)."
) 0 0 24 29 1 #"\n"
0 0 20 3 23 #"It also returns a list."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 9 #"codeblock"
0 0 24 3 1 #"{"
0 0 20 3 17 #"(apply hbl-append"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 20 3 116
(
 #"(map file-icon (map (curry * 10) (range 5))(map (curry * 10) (range "
 #"5))(list \"gray\" \"orange\" \"red\" \"green\" \"blue\")))"
) 0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 20 3 90
(
 #"This block of code uses the map and apply functions to create a row "
 #"of file icons that are"
) 0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 20 3 59
#"aligned on the bottom line and directly next to each other."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  }"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 9 #"blog-post"
0 0 24 3 1 #"["
0 0 19 3 14 #"\"Week 1 Day 3\""
0 0 24 3 2 #"]{"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 20 3 109
(
 #"We worked more on creating simple katas that use the map, curry, and"
 #" apply functions. Here are some examples:"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      @"
0 0 14 3 9 #"codeblock"
0 0 24 3 1 #"{"
0 0 20 3 65
(
 #"(map string-append (list \"Apple\" \"Banana\")(list \"Hello\" \"Worl"
 #"d\"))"
) 0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 20 3 141
(
 #"This code creates a list of two strings, one saying \"AppleHello\" a"
 #"nd the other saying \"BananaWorld\". This is because the map functio"
 #"n applies"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 138
(
 #"the string-append function to the"
 #" first items of each list (\"Apple\" and \"Hello\") and the second i"
 #"tems of each list (\"Banana\" and \"World\")."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 88
(
 #"In addition to creating more code, we also reviewed a typical 7-stag"
 #"e development cycle:"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 102
(
 #"1. Pull from master so that you have the most up-to-date version of "
 #"the code. (git pull origin master)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 174
(
 #"2. Create a new branch (preferably with a recognizable name). This i"
 #"s where your work will be done so that you don't automatically chang"
 #"e the master code. (git branch \"name\")"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 103
(
 #"3. Make the changes to the code! Be sure you're on your branch while"
 #" you do this. (git checkout \"name\")"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 106
(
 #"4. Time to start pushing your changes! Start by adding the files tha"
 #"t you've changed. (git add *filename*)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 95
(
 #"5. Commit your changes with a message explaining what you've changed"
 #". (git commit -m \"Message\")"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 84
(
 #"6. Almost done! Push your branch back to the master. (git push origi"
 #"n *branch name*)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 79
(
 #"7. On GitHub, create a pull request. Resolve any problems and then y"
 #"ou're done!"
) 0 0 24 29 1 #"\n"
0 0 24 3 2 #" }"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 9 #"blog-post"
0 0 24 3 1 #"["
0 0 19 3 14 #"\"Week 1 Day 4\""
0 0 24 3 2 #"]{"
0 0 24 29 1 #"\n"
0 0 20 3 15 #"Fourth of July!"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" }"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 9 #"blog-post"
0 0 24 3 1 #"["
0 0 19 3 14 #"\"Week 1 Day 5\""
0 0 24 3 2 #"]{"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 20 3 60
#"Our group continued to work on easy katas for map and apply."
0 0 24 29 1 #"\n"
0 0 24 3 2 #" }"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 9 #"blog-post"
0 0 24 3 1 #"["
0 0 19 3 35 #"\"Week 2 - Camp Week at Sage Canyon\""
0 0 24 3 3 #"]{}"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 9 #"blog-post"
0 0 24 3 1 #"["
0 0 19 3 14 #"\"Week 3 Day 1\""
0 0 24 3 2 #"]{"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 126
(
 #"Back at it again! Our starting challenge for the day was to write co"
 #"de that would remove duplicates from a singly linked list."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 123
(
 #"Before today, I didn't know what a singly linked list was, but now I"
 #" do (at least, more than I did yesterday). Maggie and I"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 70
(
 #"started working on the new katas for the fundamentals kata collectio"
 #"n."
) 0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" }"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 1 #"}"
0           0
